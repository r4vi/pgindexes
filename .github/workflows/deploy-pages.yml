name: Build and Deploy to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Emacs
        uses: purcell/setup-emacs@master
        with:
          version: 29.1

      - name: Install Org-mode and dependencies
        run: |
          emacs --batch --eval "(progn
            (require 'package)
            (add-to-list 'package-archives '(\"melpa\" . \"https://melpa.org/packages/\") t)
            (package-initialize)
            (package-refresh-contents)
            (package-install 'org)
            (package-install 'htmlize)
            (package-install 'ox-reveal))"

      - name: Convert README.org to HTML with Reveal.js
        run: |
          emacs --batch --eval "(progn
            (require 'org)
            (require 'ox-reveal)
            (find-file \"README.org\")
            (org-reveal-export-to-html))"

      - name: Fallback - Convert with standard HTML export if Reveal export failed
        run: |
          if [ ! -f "README.html" ]; then
            emacs --batch --eval "(progn
              (require 'org)
              (find-file \"README.org\")
              (org-html-export-to-html))"
          fi

      - name: Copy assets and setup site structure
        run: |
          mkdir -p _site
          # Copy the freshly generated HTML as index.html
          cp README.html _site/index.html
          # Copy image assets
          cp poly.jpg _site/
          # Ensure proper file permissions
          chmod -R 755 _site

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
